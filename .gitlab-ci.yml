stages:
  - test
  - coverage

variables:
  # Configure PHP
  PHP_VERSION: "8.1"
  COMPOSER_CACHE_DIR: "$CI_PROJECT_DIR/.composer-cache"

# Cache composer dependencies
cache:
  key: composer-$CI_COMMIT_REF_SLUG
  paths:
    - .composer-cache/
    - vendor/

# Test job with coverage collection
test:coverage:
  stage: test
  image: php:${PHP_VERSION}
  before_script:
    # Install system dependencies
    - apt-get update -qq && apt-get install -y -qq git unzip
    
    # Install PHP extensions needed for coverage
    - docker-php-ext-install json
    
    # Install Xdebug for code coverage
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    
    # Configure Xdebug for coverage (Xdebug 3.x configuration)
    - echo "xdebug.mode=coverage" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    
    # Install Composer
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    
    # Install dependencies
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --optimize-autoloader
    
  script:
    # Run tests with coverage
    - vendor/bin/phpunit --coverage-text --coverage-cobertura=coverage.xml --coverage-html=coverage_html --log-junit=junit.xml
    
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - coverage_html/
      - coverage.xml
      - junit.xml
    reports:
      junit: junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    expose_as: 'Coverage Report'

# Alternative job for older GitLab versions (if cobertura format is not supported)
test:coverage-legacy:
  stage: test
  image: php:${PHP_VERSION}
  rules:
    - if: $USE_LEGACY_COVERAGE == "true"
  before_script:
    # Install system dependencies
    - apt-get update -qq && apt-get install -y -qq git unzip
    
    # Install PHP extensions needed for coverage
    - docker-php-ext-install json
    
    # Install Xdebug for code coverage
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    
    # Configure Xdebug for coverage
    - echo "xdebug.mode=coverage" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    
    # Install Composer
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    
    # Install dependencies
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --optimize-autoloader
    
  script:
    # Run tests with coverage (using clover format for older GitLab versions)
    - vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml --coverage-html=coverage_html --log-junit=junit.xml
    
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  
  artifacts:
    when: always
    expire_in: 30 days
    paths:
      - coverage_html/
      - coverage.xml
      - junit.xml
    reports:
      junit: junit.xml

# Pages job to publish HTML coverage report
pages:
  stage: coverage
  dependencies:
    - test:coverage
  script:
    - mkdir public
    - cp -r coverage_html/* public/
  artifacts:
    paths:
      - public
  only:
    - main
    - master
    - develop